Index: skin/annotations.css
===================================================================
--- skin/annotations.css	(revisão 20)
+++ skin/annotations.css	(cópia de trabalho)
@@ -3,7 +3,6 @@
 }
 
 annotation {
-  -moz-binding: url("chrome://global/content/annotations.xml#annotation");
 	-moz-user-focus: normal;
 	stroke-width: 4px;
 	font-family: Lucida Grande,Geneva,Verdana,Arial,Helvetica,sans-serif;
Index: skin/wikisubs.css
===================================================================
--- skin/wikisubs.css	(revisão 14)
+++ skin/wikisubs.css	(cópia de trabalho)
@@ -1,3 +1,7 @@
+annotation {
+  -moz-binding: url("chrome://global/content/annotations.xml#annotation");
+}
+
 .subtitlesButton {
     -moz-user-focus: none;
     background: url(chrome://wikisubs/skin/subtitlesButton.png) no-repeat center;
Index: skin/wikisubsHookup.css
===================================================================
--- skin/wikisubsHookup.css	(revisão 20)
+++ skin/wikisubsHookup.css	(cópia de trabalho)
@@ -3,5 +3,3 @@
 video > xul|videocontrols {
     -moz-binding: url("chrome://global/content/wikisubs.xml#wikisubs");
 }
-
-
Index: content/wikisubs.xml
===================================================================
--- content/wikisubs.xml	(revisão 20)
+++ content/wikisubs.xml	(cópia de trabalho)
@@ -61,6 +61,9 @@
                 },
 
                 displaySubtitles : function(){
+
+                  this.set_balloon(0,0,50,50,100,50,"teste");
+
                   var currentTime = Math.round(this.video.currentTime * 1000); // in ms
                   if (this.current_subtitle == null) return;
 
@@ -75,31 +78,143 @@
                   this.subtitlesLabel.setAttribute("value", text);                    
                 },
 
-                addBalloon : function(x,y,w,h,px,py, text){
-                    var balloon = document.createElement("annotation");
-                    balloon.setAttribute("id", "myballoon");
-                    this.annotations_overlay.appendChild(balloon);
-                    document.addBinding(balloon, "chrome://global/content/annotations.xml#annotation");
+                init_annotation : function(){
 
-//                     balloon.setDimensions(20,20,50,40);
- 
-                    update_balloon = function(evt){
-//                        if(!balloon.boxObject) return;
+	                const STROKE_WIDTH = 4;
+	                const CORNER_RADIUS = 0;
 
-                      var x = Math.ceil(evt.clientX*100/balloon.boxObject.width);
-                      var y = Math.ceil(evt.clientY*100/balloon.boxObject.height);
+	                this.svg_shape_corner = CORNER_RADIUS;
+	                this.svg_shape_stroke = STROKE_WIDTH;
 
-                      balloon.setDimensions(20,20,50,40);
-                      balloon.setPointer(x, y);
-                      balloon.setText("X:"+x +" Y:"+ y);
+                  var nsSVG = "http://www.w3.org/2000/svg";
+                  var nsXUL = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
+
+                  this.svgnode = document.createElementNS(nsSVG, "svg");
+	                this.rect = document.createElementNS(nsSVG, "rect");
+	                this.path = document.createElementNS(nsSVG, "path");
+	                this.text = document.createElementNS(nsSVG, "text");
+	                this.path.setAttribute("fill", "yellow");
+	                this.path.setAttribute("opacity", "0.7");
+
+                  this.svgnode.appendChild(this.rect);
+                  this.svgnode.appendChild(this.path);
+                  this.svgnode.appendChild(this.text);
+                  this.text.appendChild(document.createTextNode("blah"));
+
+                  this.annotations_overlay = document.createElementNS(nsXUL, "hbox");
+                  this.annotations_overlay.setAttribute("flex", "1");
+//                  this.annotations_overlay.appendChild(this.svgnode);
+                },
+
+
+                set_balloon : function(_x, _y, _w, _h, _px, _py, _text){
+                 	var box_w = this.annotations_overlay.boxObject.width;
+                  var box_h = this.annotations_overlay.boxObject.height;
+             
+	                var cx = box_w / 2;
+	                var cy = box_h / 2;
+			
+	                var stroke_w = this.svg_shape_stroke;
+		
+	                this.annotations_overlay.setAttribute("width", box_w);
+	                this.annotations_overlay.setAttribute("height", box_h);
+	
+                  x = _x * box_w/100;
+	                y = _y * box_h/100;
+	                w = _w * box_w/100;
+	                h = _h * box_h/100;
+                  px = _px * box_w/100;
+	                py = _py * box_h/100;
+
+                	//var text_w = _text.getComputedTextLength();	
+                  //var text_h = document.defaultView.getComputedStyle(_text, "").getPropertyCSSValue("font-size").getFloatValue(CSSPrimitiveValue.CSS_PX);
+                  var text_w = 0;
+                  var text_h = 0;
+
+                  base_coords = function(point, p0, length){
+                    if (point > p0 + length/2){
+                      base0 = 4*length/6;
+                      base1 = 5*length/6;
+                    }else{
+                      base0 = 1*length/6;
+                      base1 = 2*length/6;
                     }
+                    return [base0, base1];
+                  }
 
-                  window.onmousemove = update_balloon;
+                  coord = function(x,y){
+                      return x + "," + y + " ";
+                  }
+
+                  //begin drawing the balloon at the top left corner
+                  var description = "M " + coord(x,y);
+
+                  //top side of the balloon
+                  if (py<y &&
+                      ( (px-(x+w)) < (y-py) ) &&
+                      ( (x-px) < (y-py) )){
+                      //if arrow is rendered at this side of the balloon:
+                      base = base_coords(px, x, w);
+                      description += coord(x+base[0],y);
+                      description += coord(px,py);
+                      description += coord(x+base[1],y);
+                  }
+                  description += coord(x+w,y);
+
+                  //right side of the balloon
+                  if (px>x+w &&
+                      ((py-(y+h)) < (px-(x+w))) &&
+                      ((y-py)<(px-(x+w)))){
+                      //if arrow is rendered at this side of the balloon:
+                      base = base_coords(py, y, h);
+                      description += coord(x+w,y+base[0]);
+                      description += coord(px,py);
+                      description += coord(x+w,y+base[1]);
+                  }
+                  description += coord(x+w,y+h);
+
+                  //bottom side of the balloon
+                  if (py>y+h &&
+                      ((x-px) < (py-(y+h))) &&
+                      ((px-(x+w))<(py-(y+h)))){
+                      //if arrow is rendered at this side of the balloon:
+                      base = base_coords(px, x, w);
+                      description += coord(x+base[1],y+h);
+                      description += coord(px,py);
+                      description += coord(x+base[0],y+h);
+                  }
+                  description += coord(x,y+h);
+
+                  //left side of the balloon
+                  if (px<x &&
+                      ((py-(y+h)) < (x-px)) &&
+                      ((y-py)<(x-px))){
+                      //if arrow is rendered at this side of the balloon:
+                      base = base_coords(py, y, h);
+                      description += coord(x,y+base[1]);
+                      description += coord(px,py);
+                      description += coord(x,y+base[0]);
+                  }
+
+                  //close the path:
+                  description += "z";
+
+	                this.path.setAttribute("d", description);
+	                this.text.setAttribute("x", x + w/2 - text_w/2);
+	                this.text.setAttribute("y", y + h/2); // -text_h/2 ?
+
+	                this.rect.setAttribute("style", "display: none");
+
+	                this.text.firstChild.nodeValue = _text;
+
                 },
 
                 init : function (binding) {
+                    this.binding = binding;
+
                     dump("\n--------- wikisubs constructor ---------\n\n");
-                    this.video = binding.parentNode;
+                 //document.loadBindingDocument('chrome://wikisubs/content/annotations.xml'); 
+                 this.video = binding.parentNode;
 
                     // XBL doesn't have a good way to inject content into the middle of
                     // something else, so we'll insert our content via DOM manipulation.
@@ -146,14 +261,18 @@
 
                     this.test_subtitles();
 
-                    var xulns = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
+//                    var xulns = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
+                    this.init_annotation();
+
                     statusOverlay = document.getAnonymousElementByAttribute(binding, "class", "statusOverlay");
-                    this.annotations_overlay = document.createElementNS(xulns, "stack");
-                    this.annotations_overlay.setAttribute("flex", "1");
+//                    muteButton.parentNode.insertBefore(this.annotations_overlay, muteButton);
                     statusOverlay.parentNode.insertBefore(this.annotations_overlay, statusOverlay);
+                    statusOverlay.parentNode.insertBefore(this.svgnode, statusOverlay);
 
-                    this.addBalloon(0,0,10,10,20,30,"testing");
 
+
+                    
+
                     var self = this;
                     self.video.addEventListener("DOMNodeInserted", function(event) { self.videoChildInserted(event); }, false);
                     self.video.addEventListener("timeupdate", function() { self.displaySubtitles(); }, false);
@@ -179,6 +298,7 @@
         <constructor>
             <![CDATA[
                 this.wikisubsUtils.init(this);
+                this.built = true;
             ]]>
         </constructor>
       </implementation>
Index: content/annotations.xml
===================================================================
--- content/annotations.xml	(revisão 20)
+++ content/annotations.xml	(cópia de trabalho)
@@ -231,7 +231,7 @@
 				<parameter name="h" /> 
 				<body>
 	<![CDATA[
-	
+
 	if (!x) x = 0;
 	if (!y) y = x;
 	if (!w) w = 100;
