<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   version="1.1"
   width="4000"
   height="4000"
   onload="init(evt);">

  <rect
     width="100%"
     height="100%"
     x="0"
     y="0"
     style="fill:#000000;fill-opacity:1;stroke:none" />

<circle fill="red" cx="15" cy="25" r="15" onclick="drawing_function = linear_fill"/>
<circle fill="green" cx="15" cy="60" r="15" onclick="drawing_function = draw_rings"/>

  <script xlink:href="SubwayDisplay.js" />
  <script><![CDATA[
  
var modules = new Array();

function init(evt){
	var O=evt.target;
	var svgDoc=O.ownerDocument;
	var svg = svgDoc.getElementsByTagName("svg")[0];

  for (var i=0;i<5;i++){
    modules.push(new Display({svg:svg, template:"Vienna.svg", col:i, row:0}));
  }
  for (var i=0;i<5;i++){
    modules.push(new Display({svg:svg, template:"Vienna.svg", col:i, row:1}));
  }

  var delta_t = 100; //frequency = 1/100ms = 10Hz
	window.setInterval(timer, delta_t);
}

var xx=0;

function linear_fill(points, middle){
  var x=middle[0];
  var y=middle[1];
  return (x+y<xx);
}

var r,cx,cy;
function reset_coordinates(){
  cy=600;
  cx=-100;
  r=20;
}
reset_coordinates();

function draw_rings(points, middle){
  var x=middle[0];
  var y=middle[1];

  var d = Math.sqrt((x-cx)*(x-cx) + (y-cy)*(y-cy))
  return (d<r && d>(r*0.8) || d<(r*0.6) && d>(r*0.5) || d<(r*0.3));
}

var drawing_function = linear_fill;

function timer(){
  for (m in modules){
    var mod = modules[m];
    mod.draw(drawing_function);
  }
  xx+=20;
  if (xx>1500) xx=0;
  
  cx += 20;
  cy -= 5;
  r +=10;
  if (cx>1500) {
    reset_coordinates();
  }
}

  ]]></script>

</svg>
